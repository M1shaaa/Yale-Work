if(NoMatches==1){     # If there are no duplicates, it just adds it as a new row to the DEID_ND dataset
Matches <- DeIdentified_NoDuplicates[i,]
Matches$n_Appointments <- 1
DEID_ND <- rbind(DEID_ND, Matches[1,])
}
if(NoMatches!=1){       # If there are duplicates however...
Matches <- DeIdentified_NoDuplicates[DeIdentified_NoDuplicates$Q43 == ParentName,] # It creates a new dataset (Matches) with all of the matches
Matches$count.blank <- apply(Matches, 1, function(x) length(which(x=="")))  # And creates a new column that tells us how much of the survey parents filled out (The Progress column does not accurately do this)
Matches$maxfill <- ifelse(Matches$count.blank==min(Matches$count.blank), "YES", "NO")   # Then it creates another column to decide which row is the most complete version of the form
ifelse(str_count(Matches$maxfill, "YES")==1,   # If only one form is the most complete version...
(Matches <- Matches[which.min(Matches$count.blank),]),  # It filters the Matches dataframe so that only the most complete record remains
(Matches <- Matches %>% filter(Matches$maxfill=="YES") %>%   # Otherwise, i.e. if there are multiple "most complete" versions...
separate(col=RecordedDate,into=c("Date","Time"),sep=" ") %>%   # (This code is just making the date readable to R)
dplyr::slice(which.min(base::as.Date(Date, "%Y-%m-%d"))) %>%  # It will choose the most recent version of the form
tidyr::unite("RecordedDate", Date:Time, remove=TRUE, sep = " ")))   # Re-making the RecordedDate column
Matches <- Matches %>% dplyr::select(-count.blank, -maxfill)  # Finally, this piece of code removes all the extra columns we added
Matches$n_Appointments <- NoMatches
DEID_ND <- rbind(DEID_ND, Matches[1,]) # And adds the record to the DEID_ND dataframe.
}
}
# Since it does this for every row (meaning including each time for all duplicate records), we have to delete duplicates. Since all of the duplicate records are the exact same, we can delete them easily:
DEID_ND <- DEID_ND[!duplicated(DEID_ND$Q43), -(1:7)] %>% dplyr::select(RecordedDate, Consent, AV_Consent, Participant_n:Study_Year, Parent1.Gender:n_Appointments)
# Removing the NA row
DEID_ND <- DEID_ND[-(1),]
# Making family ids
DEID_ND$id <- c(1:nrow(DEID_ND))
# Creating a new dataframe
DeID_Final <- DEID_ND
#Adding new row for 2nd kid
DeID_Final <- rbind(DeID_Final,
DeID_Final %>%
filter(Participant_n==2) %>%
mutate(Child1_DOB=Child2_DOB,
Child1_Gender=Child2_Gender,
Child1_Ethn=Child2_Ethn))
#Adding new row for 3rd kid
DeID_Final <- rbind(DeID_Final,
DeID_Final %>%
filter(Participant_n==3) %>%
mutate(Child1_DOB=Child3_DOB,
Child1_Gender=Child3_Gender,
Child1_Ethn=Child3_Ethn),
DeID_Final %>%
filter(Participant_n==3) %>%
mutate(Child1_DOB=Child3_DOB,
Child1_Gender=Child3_Gender,
Child1_Ethn=Child3_Ethn))
#Adding new row for 4th kid
DeID_Final <- rbind(DeID_Final,
DeID_Final %>%
filter(Participant_n==4) %>%
mutate(Child1_DOB=Child4_DOB,
Child1_Gender=Child4_Gender,
Child1_Ethn=Child4_Ethn),
DeID_Final %>%
filter(Participant_n==4) %>%
mutate(Child1_DOB=Child3_DOB,
Child1_Gender=Child3_Gender,
Child1_Ethn=Child3_Ethn),
DeID_Final %>%
filter(Participant_n==4) %>%
mutate(Child1_DOB=Child2_DOB,
Child1_Gender=Child2_Gender,
Child1_Ethn=Child2_Ethn))
#Deleting columns for more than 1 kid
DeID_Final <- DeID_Final %>% dplyr::select(-starts_with("Child2"),-starts_with("Child3"),-starts_with("Child4"))
#DOB
DeID_Final$Child_DOB <- DeID_Final$Child1_DOB
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01"] <- "01/26/2017"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01/03/207"] <- "01/03/2017"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01/05/14"] <- "01/05/2014"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01/05/17"] <- "01/05/2017"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01/07/19"] <- "01/07/2019"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01/14/18"] <- "01/14/2018"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01/18/18"] <- "01/18/2018"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01/30/2017"] <- "01/30/2017"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01052018"] <- "01/05/2018"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01182014"] <- "01/18/2014"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "01302016"] <- "01/30/2016"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "02/08/14"] <- "02/08/2014"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "02/15/2017"] <- "02/15/17"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "02262014"] <- "02/26/2014"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "04" & DeID_Final$Child1_Gender=="19"] <- "04/19/2013"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "04" & DeID_Final$Child1_Gender=="03"] <- "04/03/2015"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "040/01/2016"] <- "04/01/2016"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "04022014"] <- "04/02/2014"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "04082012"] <- "04/08/2012"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "05"] <- "05/15/2013"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "05/2018"] <- "05/01/2018"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "05232011"] <- "05/23/2011"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "05252017"] <- "05/25/2017"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "06"] <- "06/25/"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "06/18^2015"] <- "06/18/2015"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "06142018"] <- "06/14/2018"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "06202014"] <- "06/20/2014"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "06252013"] <- "06/25/2013"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "07042015"] <- "07/04/2015"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "07052014"] <- "07/05/2014"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "07052017"] <- "07/05/2017"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "07062017"] <- "07/06/2017"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "08/01/0212"] <- "08/01/2012"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "08/30"] <- "08/30/"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "08152012"] <- "08/15/2012"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "08192015"] <- "08/19/2015"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "08202012"] <- "08/20/2012"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "09" & DeID_Final$Child1_Gender=="21"] <- "09/21/2009"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "09" & DeID_Final$Child1_Gender=="01"] <- "09/01/2014"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "09-01-2013 "] <- "09/01/2013 "
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "09042017"] <- "09/04/2017"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "09092015"] <- "09/09/2015"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "09302011"] <- "09/30/2011"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "10-09/2016"] <- "10/09/2016"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "102512"] <- "10/25/2012"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "11" & DeID_Final$Child1_Gender=="F"] <- "11//"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "11" & DeID_Final$Child1_Gender=="01"] <- "11/01/2015"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "12082015"] <- "12/08/2015"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "2015"] <- "//2015"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "2016"] <- "//2016"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "21/10/2016"] <- "10/21/2016"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "3/31/2-14"] <- "3/31/2014"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "32617"] <- "3/26/2017"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == "6"] <- "6//"
DeID_Final$Child_DOB[DeID_Final$Child1_DOB == ""] <- ""
DeID_Final$Child_DOB1 <-DeID_Final$Child_DOB
DeID_Final$Child_DOB1 <- as.Date(DeID_Final$Child_DOB, "%m/%d/%Y", optional = TRUE)
DeID_Final$Child_DOB_MonthYear <- format(DeID_Final$Child_DOB1, format="%m/%Y")
DeID_Final$Consent_Date <- as.Date(paste(DeID_Final$Consent_Day, DeID_Final$Consent_Month, DeID_Final$Consent_Year, sep="-"), "%d-%B-%Y", optional = TRUE)
DeID_Final$Study_Date <- as.Date(paste(DeID_Final$Study_Day, DeID_Final$Study_Month, DeID_Final$Study_Year, sep="-"), "%d-%B-%Y", optional = TRUE)
DeID_Final$Child_Age <- as.numeric((DeID_Final$Study_Date - DeID_Final$Child_DOB1)/365)
DeID_ForAnalysis <- DeID_Final %>% dplyr::select(-RecordedDate, -Child1_DOB, -Child_DOB, -Child_DOB1)
DeID_Final$Child1_DOB = NULL
DeID_Final$Child_DOB = NULL
DeID_Final$Child_DOB1 = NULL
DeID_ForAnalysis$Child1_DOB = NULL
DeID_ForAnalysis$Child_DOB = NULL
#Gender
DeID_Final$Child_Gender <- DeID_Final$Child1_Gender
DeID_Final$Child_Gender[DeID_Final$Child_Gender == "M" |
DeID_Final$Child_Gender == "m"|
DeID_Final$Child_Gender == "Boy"|
DeID_Final$Child_Gender == "male"|
DeID_Final$Child_Gender == "male "|
DeID_Final$Child_Gender == "Male "|
DeID_Final$Child_Gender == "MALE"|
DeID_Final$Child_Gender == "Maoe"|
DeID_Final$Child_Gender == "Make "] <- "Male"
DeID_Final$Child_Gender[DeID_Final$Child_Gender == "F" |
DeID_Final$Child_Gender == "f" |
DeID_Final$Child_Gender == "F " |
DeID_Final$Child_Gender == "female"|
DeID_Final$Child_Gender == "Girl"|
DeID_Final$Child_Gender == "FEMALE"|
DeID_Final$Child_Gender == "FEMALE "|
DeID_Final$Child_Gender == "Female "] <- "Female"
DeID_Final$Child_Gender[DeID_Final$Child_Gender == "" |
DeID_Final$Child_Gender == "01"|
DeID_Final$Child_Gender == "03"|
DeID_Final$Child_Gender == "15"|
DeID_Final$Child_Gender == "19"|
DeID_Final$Child_Gender == "21"|
DeID_Final$Child_Gender == "25"|
DeID_Final$Child_Gender == "05"|
DeID_Final$Child_Gender == "11"|
DeID_Final$Child_Gender == "11"|
DeID_Final$Child_Gender == "30"|
DeID_Final$Child_Gender == "x"|
DeID_Final$Child_Gender == "26"|
DeID_Final$Child_Gender == "6"] <- "Blank"
DeID_Final$Child_Gender[DeID_Final$Child_Gender == "Non binary"|
DeID_Final$Child_Gender == "Non binary "] <- "Non-Binary"
table(DeID_Final$Child_Gender)
#Ethnicity
DeID_Final$Child_Ethn <- DeID_Final$Child1_Ethn
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "white"|
DeID_Final$Child_Ethn == "White "|
DeID_Final$Child_Ethn == "Whitr"|
DeID_Final$Child_Ethn == "Wht "|
DeID_Final$Child_Ethn == "White, non-Hispanic"|
DeID_Final$Child_Ethn == "white/non-hispanic"|
DeID_Final$Child_Ethn == "White non hispanic"|
DeID_Final$Child_Ethn == "WHITE"|
DeID_Final$Child_Ethn == "White/ Caucasian "|
DeID_Final$Child_Ethn == "Caucashion"|
DeID_Final$Child_Ethn == "Caucasi"|
DeID_Final$Child_Ethn == "Cauc."|
DeID_Final$Child_Ethn == "White/non Hispanic "|
DeID_Final$Child_Ethn == "white "|
DeID_Final$Child_Ethn == "Caucasian "|
DeID_Final$Child_Ethn == "Caucasian"|
DeID_Final$Child_Ethn == "White Caucasian"|
DeID_Final$Child_Ethn == "White Caucasian "|
DeID_Final$Child_Ethn == "caucasian"|
DeID_Final$Child_Ethn == "caucasian "|
DeID_Final$Child_Ethn == "Caucasian, Non-Hispanic"|
DeID_Final$Child_Ethn == "Caucasian/non-Hispanic"|
DeID_Final$Child_Ethn == "Caucasian/White"|
DeID_Final$Child_Ethn == "Caucasion"] <- "White"
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "asian"|
DeID_Final$Child_Ethn == "ASIAN"|
DeID_Final$Child_Ethn == "Asian "|
DeID_Final$Child_Ethn == "Vietnamese "|
DeID_Final$Child_Ethn == "Asiann"|
DeID_Final$Child_Ethn == "Southeast Asian "|
DeID_Final$Child_Ethn == "South Asian"|
DeID_Final$Child_Ethn == "south east indian"|
DeID_Final$Child_Ethn == "Asian indian"|
DeID_Final$Child_Ethn == "Central Asian"|
DeID_Final$Child_Ethn == "Chinese"|
DeID_Final$Child_Ethn == "Asian, Indian "|
DeID_Final$Child_Ethn == "Asian American"|
DeID_Final$Child_Ethn == "Asian American "|
DeID_Final$Child_Ethn == "AISAN"|
DeID_Final$Child_Ethn == "Pakistani "|
DeID_Final$Child_Ethn == "Asian XO"|
DeID_Final$Child_Ethn == "AsianAmerican"] <- "Asian"
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "Black "|
DeID_Final$Child_Ethn == "Blk"|
DeID_Final$Child_Ethn == "African American "|
DeID_Final$Child_Ethn == "African/American"|
DeID_Final$Child_Ethn == "African"|
DeID_Final$Child_Ethn == "african/black"|
DeID_Final$Child_Ethn == "african/black "|
DeID_Final$Child_Ethn == "Bleack"|
DeID_Final$Child_Ethn == "Black African American "|
DeID_Final$Child_Ethn == "Black American"|
DeID_Final$Child_Ethn == "black "|
DeID_Final$Child_Ethn == "blacks "|
DeID_Final$Child_Ethn == "Blacks "|
DeID_Final$Child_Ethn == "BLACK"|
DeID_Final$Child_Ethn == "BLACK "|
DeID_Final$Child_Ethn == "Black  America "|
DeID_Final$Child_Ethn == "Black american"|
DeID_Final$Child_Ethn == "Black American "|
DeID_Final$Child_Ethn == "African American"|
DeID_Final$Child_Ethn == "Blk "] <- "Black"
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "hispanic "|
DeID_Final$Child_Ethn == "HISPANIC"|
DeID_Final$Child_Ethn == "Hispanic "|
DeID_Final$Child_Ethn == "Hispanic"|
DeID_Final$Child_Ethn == "Latina"|
DeID_Final$Child_Ethn == "Latino"|
DeID_Final$Child_Ethn == "latino"|
DeID_Final$Child_Ethn == "His"|
DeID_Final$Child_Ethn == "Puerto Rico"|
DeID_Final$Child_Ethn == "Latin"|
DeID_Final$Child_Ethn == "Latin "|
DeID_Final$Child_Ethn == "hispanic"] <- "Hispanic/Latino"
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "PACIFIC ISLANDER (CHAMORRU, FILIPINO, CHINESE)"|
DeID_Final$Child_Ethn == "PI"|
DeID_Final$Child_Ethn == "Pacific Islander"|
DeID_Final$Child_Ethn == "Asian-Pacific Islander"|
DeID_Final$Child_Ethn == "Filipino American"] <- "Pacific Islander"
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "Middle eastern"|
DeID_Final$Child_Ethn == "Arab"|
DeID_Final$Child_Ethn == "Middle Eastern"|
DeID_Final$Child_Ethn == "middle eastern "|
DeID_Final$Child_Ethn == "North Africa "|
DeID_Final$Child_Ethn == "Middle eastern "] <- "Middle Eastern"
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "Alaska Native"|
DeID_Final$Child_Ethn == "indian american "|
DeID_Final$Child_Ethn == "indi"|
DeID_Final$Child_Ethn == "Indi"|
DeID_Final$Child_Ethn == "indian"|
DeID_Final$Child_Ethn == "INDIAN"|
DeID_Final$Child_Ethn == "West indian"|
DeID_Final$Child_Ethn == "West Indian"|
DeID_Final$Child_Ethn == "Indian"|
DeID_Final$Child_Ethn == "American Indian "|
DeID_Final$Child_Ethn == "American Indian/Alaskan Native"|
DeID_Final$Child_Ethn == "Indian "|
DeID_Final$Child_Ethn == "Appalachian "] <- "American Indian/Alaskan Native"
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "Hmong"] <- "Hmong"
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "Multi"|
DeID_Final$Child_Ethn == "Multiracial"|
DeID_Final$Child_Ethn == "Multiple"|
DeID_Final$Child_Ethn == "mixed"|
DeID_Final$Child_Ethn == "Caucasian & Pacific Islander"|
DeID_Final$Child_Ethn == "Caucasian/Asian "|
DeID_Final$Child_Ethn == "Mixed"|
DeID_Final$Child_Ethn == "Black/white "|
DeID_Final$Child_Ethn == "W/A"|
DeID_Final$Child_Ethn == "B/w"|
DeID_Final$Child_Ethn == "Mixed - Asian/White"|
DeID_Final$Child_Ethn == "W/C"|
DeID_Final$Child_Ethn == "Mixed - Asian-White"|
DeID_Final$Child_Ethn == "W/B"|
DeID_Final$Child_Ethn == "H/AA"|
DeID_Final$Child_Ethn == "Wh/Hisp"|
DeID_Final$Child_Ethn == "White and Asian American"|
DeID_Final$Child_Ethn == "White/middle eastern "|
DeID_Final$Child_Ethn == "White/Latino "|
DeID_Final$Child_Ethn == "H/AA "|
DeID_Final$Child_Ethn == "White/Latino"|
DeID_Final$Child_Ethn == "White/Latina"|
DeID_Final$Child_Ethn == "Black/White/Non-Hispanic"|
DeID_Final$Child_Ethn == "ASIAN INDIAN"|
DeID_Final$Child_Ethn == "Asian-Indian"|
DeID_Final$Child_Ethn == "asian, white"|
DeID_Final$Child_Ethn == "White/mexican"|
DeID_Final$Child_Ethn == "White/API"|
DeID_Final$Child_Ethn == "White/ Black"|
DeID_Final$Child_Ethn == "white, asian"|
DeID_Final$Child_Ethn == "asian/white"|
DeID_Final$Child_Ethn == "b/w"|
DeID_Final$Child_Ethn == "W&L"|
DeID_Final$Child_Ethn == "W/H"|
DeID_Final$Child_Ethn == "Wh/Hispanic"|
DeID_Final$Child_Ethn == "White/Hispanic "|
DeID_Final$Child_Ethn == "White/Hispanic"|
DeID_Final$Child_Ethn == "White/hispanic"|
DeID_Final$Child_Ethn == "White/Asian "|
DeID_Final$Child_Ethn == "chinese white"|
DeID_Final$Child_Ethn == "Wh/Hispanic "|
DeID_Final$Child_Ethn == "Asian white"|
DeID_Final$Child_Ethn == "White and Filipino"|
DeID_Final$Child_Ethn == "Asian white "|
DeID_Final$Child_Ethn == "Asian/Hispanic"|
DeID_Final$Child_Ethn == "White/Asian"|
DeID_Final$Child_Ethn == "White/asian"|
DeID_Final$Child_Ethn == "white, mexican, native american"|
DeID_Final$Child_Ethn == "White/ Hispan"|
DeID_Final$Child_Ethn == "White/Mex "|
DeID_Final$Child_Ethn == "White/Mexican"|
DeID_Final$Child_Ethn == "white/asian"|
DeID_Final$Child_Ethn == "White/Hispanic/Native American" |
DeID_Final$Child_Ethn == "White/Arab"|
DeID_Final$Child_Ethn == "white / latino / Native American"|
DeID_Final$Child_Ethn == "Asian and Caucasian"|
DeID_Final$Child_Ethn == "Asian Caucasian"|
DeID_Final$Child_Ethn == "White/ middle eastern "|
DeID_Final$Child_Ethn == "white/ hispanic"|
DeID_Final$Child_Ethn == "White/ Chinese"|
DeID_Final$Child_Ethn == "White Latino"|
DeID_Final$Child_Ethn == "White Hispanic"|
DeID_Final$Child_Ethn == "Mixed"|
DeID_Final$Child_Ethn == "Mixed "|
DeID_Final$Child_Ethn == "Japanese and Caicasian"|
DeID_Final$Child_Ethn == "Japanese / White"|
DeID_Final$Child_Ethn == "Caucasian/Asian"|
DeID_Final$Child_Ethn == "Caucasian/Taiwanese"|
DeID_Final$Child_Ethn == "caucasian/jewish"|
DeID_Final$Child_Ethn == "caucasian-jewish"|
DeID_Final$Child_Ethn == "East Asian/white"|
DeID_Final$Child_Ethn == "Asian/African American"|
DeID_Final$Child_Ethn == "Asian/African American "|
DeID_Final$Child_Ethn == "asian/white"|
DeID_Final$Child_Ethn == "Asian/white"|
DeID_Final$Child_Ethn == "Asian/White"|
DeID_Final$Child_Ethn == "B/W"|
DeID_Final$Child_Ethn == "biracial"|
DeID_Final$Child_Ethn == "Biracial"|
DeID_Final$Child_Ethn == "Biracial "|
DeID_Final$Child_Ethn == "biracial black white"|
DeID_Final$Child_Ethn == "Black hispanic"|
DeID_Final$Child_Ethn == "Black/Hispanic"|
DeID_Final$Child_Ethn == "Black/White"|
DeID_Final$Child_Ethn == "British white indian"|
DeID_Final$Child_Ethn == "Chinese Caucasian "|
DeID_Final$Child_Ethn == "hispanic/white"|
DeID_Final$Child_Ethn == "Haitian/Panamanian/Irish/Italian "|
DeID_Final$Child_Ethn == "Hispanic white"|
DeID_Final$Child_Ethn == "Hispanic/white"|
DeID_Final$Child_Ethn == "Hispanic/White"|
DeID_Final$Child_Ethn == "mexican white"|
DeID_Final$Child_Ethn == "Indian-persian"|
DeID_Final$Child_Ethn == "Caucasian and Asian"|
DeID_Final$Child_Ethn == "Chinese white"|
DeID_Final$Child_Ethn == "Indian-persian"|
DeID_Final$Child_Ethn == "multiracial"|
DeID_Final$Child_Ethn == "multi"|
DeID_Final$Child_Ethn == "Asian/white "|
DeID_Final$Child_Ethn == "Indian-Persian"|
DeID_Final$Child_Ethn == "Indian-Persian "|
DeID_Final$Child_Ethn == "Asian and White"|
DeID_Final$Child_Ethn == "Hispanic/asian"] <- "Multiple Categories"
#Uncategorizable (One letter responses like "H" or "CH")
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == "H"|
DeID_Final$Child_Ethn == "h"|
DeID_Final$Child_Ethn == "L"|
DeID_Final$Child_Ethn == "c"|
DeID_Final$Child_Ethn == "C"|
DeID_Final$Child_Ethn == "A"|
DeID_Final$Child_Ethn == "N/a"|
DeID_Final$Child_Ethn == "Non hospianic"|
DeID_Final$Child_Ethn == "B"|
DeID_Final$Child_Ethn == "Yes" |
DeID_Final$Child_Ethn == "x" |
DeID_Final$Child_Ethn == "Miami" |
DeID_Final$Child_Ethn == "Irving" |
DeID_Final$Child_Ethn == "Unknown " |
DeID_Final$Child_Ethn == "W" |
DeID_Final$Child_Ethn == "w"|
DeID_Final$Child_Ethn == "w/NA"|
DeID_Final$Child_Ethn == "Brown"|
DeID_Final$Child_Ethn == "Brown "|
DeID_Final$Child_Ethn == "CH"|
DeID_Final$Child_Ethn == "European"|
DeID_Final$Child_Ethn == "M"|
DeID_Final$Child_Ethn == "D"|
DeID_Final$Child_Ethn == "N American "|
DeID_Final$Child_Ethn == "N. American "|
DeID_Final$Child_Ethn == "Same"|
DeID_Final$Child_Ethn == "AA"|
DeID_Final$Child_Ethn == "2009"|
DeID_Final$Child_Ethn == "2011"|
DeID_Final$Child_Ethn == "2016"|
DeID_Final$Child_Ethn == "male"|
DeID_Final$Child_Ethn == "2018"|
DeID_Final$Child_Ethn == "Na"|
DeID_Final$Child_Ethn == "2013"|
DeID_Final$Child_Ethn == "AI"|
DeID_Final$Child_Ethn == "American"|
DeID_Final$Child_Ethn == "American "|
DeID_Final$Child_Ethn == "2014"|
DeID_Final$Child_Ethn == "brown"|
DeID_Final$Child_Ethn == "2015"|
DeID_Final$Child_Ethn == "2017"] <- "Uncategorizable"
DeID_Final$Child_Ethn[DeID_Final$Child_Ethn == ""] <- "No response"
table(DeID_Final$Child_Ethn)
DeID_Final %>% group_by(n_Appointments) %>% dplyr::summarise(mean=mean(n_Appointments), number_Appointments = n()) %>%
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each child participate in one year?", x= "Number of times participated", y="Number of children")
DEID_ND %>% group_by(n_Appointments) %>% dplyr::summarise(mean=mean(n_Appointments), number_Appointments = n()) %>%
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each family participate in one year?", x= "Number of times participated", y="Number of families")
DeID_Final %>% group_by(n_Appointments) %>% dplyr::summarise(mean=mean(n_Appointments), number_Appointments = n()) %>%
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each child participate in one year?", x= "Number of times participated", y="Number of children")
DEID_ND %>% group_by(n_Appointments) %>% dplyr::summarise(mean=mean(n_Appointments), number_Appointments = n()) %>%
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each family participate in one year?", x= "Number of times participated", y="Number of families")
DeID_Final %>% group_by(n_Appointments) %>%
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each child participate in one year?", x= "Number of times participated", y="Number of children")
DeID_Final %>% group_by(n_Appointments) %>%
number_Appointments = n() %>%
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each child participate in one year?", x= "Number of times participated", y="Number of children")
DeID_Final %>% group_by(n_Appointments) %>%
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each child participate in one year?", x= "Number of times participated", y="Number of children")
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each child participate in one year?", x= "Number of times participated", y="Number of children")
DeID_Final %>% group_by(n_Appointments) %>% dplyr::summarise(mean=mean(n_Appointments), number_Appointments = n()) %>%
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each child participate in one year?", x= "Number of times participated", y="Number of children")
DeID_Final %>%
group_by(n_Appointments) %>%
summarise(number_Families = n()) %>%
ggplot(aes(x = as.factor(n_Appointments), y = number_Families, fill = as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Families), vjust = -0.5) +
labs(title = "How many times does each family participate in one year?",
x = "Number of times participated",
y = "Number of families")
DeID_Final %>%
group_by(n_Appointments) %>%
summarise(number_Families = sum(1)) %>%
ggplot(aes(x = as.factor(n_Appointments), y = number_Families, fill = as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Families), vjust = -0.5) +
labs(title = "How many times does each family participate in one year?",
x = "Number of times participated",
y = "Number of families")
View(DeID_Final)
for(i in 1:nrow(DeIdentified_NoDuplicates)) {
ParentName <- DeIdentified_NoDuplicates$Q43[i]      # Takes the parent name for a certain row
NoMatches <- nrow(DeIdentified_NoDuplicates %>% filter(Q43==ParentName))      # Checks if there are duplicates for that name
if(NoMatches==1){       # If there are no duplicates, it just adds it as a new row to the DEID_ND dataset
Matches <- DeIdentified_NoDuplicates[i,]
Matches$n_Appointments <- 1
DEID_ND <- rbind(DEID_ND, Matches[1,])
}
if(NoMatches!=1){       # If there are duplicates however...
Matches <- DeIdentified_NoDuplicates[DeIdentified_NoDuplicates$Q43 == ParentName,] # It creates a new dataset (Matches) with all of the matches
Matches$count.blank <- apply(Matches, 1, function(x) length(which(x=="")))  # And creates a new column that tells us how much of the survey parents filled out (The Progress column does not accurately do this)
Matches$maxfill <- ifelse(Matches$count.blank==min(Matches$count.blank), "YES", "NO")   # Then it creates another column to decide which row is the most complete version of the form
ifelse(str_count(Matches$maxfill, "YES")==1,   # If only one form is the most complete version...
(Matches <- Matches[which.min(Matches$count.blank),]),  # It filters the Matches dataframe so that only the most complete record remains
(Matches <- Matches %>% filter(Matches$maxfill=="YES") %>%   # Otherwise, i.e. if there are multiple "most complete" versions...
separate(col=RecordedDate,into=c("Date","Time"),sep=" ") %>%   # (This code is just making the date readable to R)
dplyr::slice(which.min(base::as.Date(Date, "%Y-%m-%d"))) %>%  # It will choose the most recent version of the form
tidyr::unite("RecordedDate", Date:Time, remove=TRUE, sep = " ")))   # Re-making the RecordedDate column
Matches <- Matches %>% dplyr::select(-count.blank, -maxfill)  # Finally, this piece of code removes all the extra columns we added
Matches$n_Appointments <- NoMatches
DEID_ND <- rbind(DEID_ND, Matches[1,]) # And adds the record to the DEID_ND dataframe.
}
}
View(DeID_Final)
DeID_Final %>% group_by(n_Appointments) %>% dplyr::summarise(mean=mean(n_Appointments), number_Appointments = n()) %>%
ggplot(aes(x=as.factor(n_Appointments),y= number_Appointments, fill=as.factor(n_Appointments))) +
geom_bar(stat = "identity") +
geom_text(aes(label = number_Appointments), vjust = 0) +
labs(title = "How many times does each child participate in one year?", x= "Number of times participated", y="Number of children")
